name: MSVC Sensing dev installer Build, Test

on:
  push:
    branches-ignore:
      - main  # This will run the build and test jobs for every push on all branches except for dev to main

  pull_request:
    branches:
      - '*'  # This will run the build and test jobs for pull requests to all branches


jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
         python-version: "3.11.4"

      - name: Install Conan and PyYAML via pip
        run: |
         python -m pip install conan
         python -m pip install PyYAML

      - name: Disable Perl (remove from PATH)
        run: choco uninstall strawberryperl -n

      - name: Install WiX Toolset
        run: choco install wixtoolset -y

      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Create and enter the build directory
        run: |
          cd installer
          mkdir build
          cd build

      - name: Run CMake
        working-directory: installer/build
        run: cmake -G "Visual Studio 17 2022" -A x64 ../

      - name: Build with CMake
        working-directory: installer/build
        run: cmake --build . --config Release

      - name: Generate liscence files
        working-directory: installer/build
        run: cmake -G "Visual Studio 17 2022" -A x64 ../ 

      - name: Create package zip
        working-directory: installer/build
        run: cpack -G "ZIP"

      # - name: Create package without opencv
      #   working-directory: installer/build
      #   run:  cmake -G "Visual Studio 17 2022" -A x64 ../ -DOPENCV_ACTION="use_existing"

      # - name: Create package msi
      #   working-directory: installer/build
      #   run: cpack -G "WIX"

      # - name: Create package zip
      #   working-directory: installer/build
      #   run: cpack -G "ZIP"
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sensing-dev-installer-zip
          path: |
            installer/build/*.zip
  test:
    runs-on: windows-latest
    permissions:
      id-token: write
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sensing-dev-installer-zip
          merge-multiple: true
        
      - name: Unzip
        run: | 
          mkdir ${HOME}/sensing-dev
          unzip sensing-dev*.zip
          mv sensing-dev*/* ${HOME}/sensing-dev
          ls ${HOME}/sensing-dev

      - name: Test arvis
        run: |
          $BINPATH="${HOME}/sensing-dev/bin"
          $env:PATH="$env:PATH;$BINPATH"
          $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
          cd installer/testcases/cpp/aravis_test  && cmake -G "Visual Studio 17 2022" -A x64 ./
          cmake --build . --config Release 
          cd Release && ./aravis_test
          echo "aravis test passed"
  
      - name: Test ion-kit
        run: |
          $BINPATH="${HOME}/sensing-dev/bin"
          $env:PATH="$env:PATH;$BINPATH"
          $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
          cd installer/testcases/cpp/ionkit_test && cmake -G "Visual Studio 17 2022" -A x64 ./
          cmake --build . --config Release 
          cd Release && ./ionkit_test
          echo "ion-kit test passed"
  
      - name: Test opencv
        run: |
          $BINPATH="${HOME}/sensing-dev/bin"
          $OPENCVBIN="${HOME}/sensing-dev/opencv/build/x64/vc15/bin"
          $env:PATH="$env:PATH;$BINPATH"
          $env:PATH="$env:PATH;$OPENCVBIN"
          $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
          cd installer/testcases/cpp/opencv_test  && cmake -G "Visual Studio 17 2022" -A x64 ./
          cmake --build . --config Release 
          cd Release && ./opencv_test
          echo "opencv test passed"
