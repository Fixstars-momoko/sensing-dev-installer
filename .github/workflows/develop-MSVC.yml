name: MSVC Sensing dev installer Build, Test

on:
  push:
    branches-ignore:
      - main  # This will run the build and test jobs for every push on all branches except for dev to main

  pull_request:
    branches:
      - '*'  # This will run the build and test jobs for pull requests to all branches


jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
         python-version: "3.11.4"

      - name: Create and enter the build directory
        run: |
          cd installer
          mkdir build
          cd build
          python ${GITHUB_WORKSPACE}/installer/src/generate_config.py
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sensing-dev-installer-zip
          path: |
            ${GITHUB_WORKSPACE}/build/config_Windows.json
  # test:
  #   runs-on: ${{ matrix.os }}
  #   permissions:
  #     id-token: write
  #   strategy:
  #       matrix:
  #         os: [windows-2019, windows-2022]
  #   needs: build
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4.1.1
  #       with:
  #         submodules: recursive

  #     - name: Download All Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: sensing-dev-installer-zip
  #         merge-multiple: true
        
  #     - name: Unzip
  #       run: | 
  #         mkdir ${HOME}/sensing-dev
  #         unzip sensing-dev*.zip
  #         mv sensing-dev*/* ${HOME}/sensing-dev
  #         ls ${HOME}/sensing-dev

  #     - name: Test arvis
  #       run: |
  #         $BINPATH="${HOME}/sensing-dev/bin"
  #         $env:PATH="$env:PATH;$BINPATH"
  #         $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
  #         cd installer/testcases/cpp/aravis_test  && cmake ./
  #         cmake --build . --config Release 
  #         cd Release && ./aravis_test
  #         echo "aravis test passed"
  
  #     - name: Test ion-kit
  #       run: |
  #         $BINPATH="${HOME}/sensing-dev/bin"
  #         $env:PATH="$env:PATH;$BINPATH"
  #         $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
  #         cd installer/testcases/cpp/ionkit_test && cmake ./
  #         cmake --build . --config Release 
  #         cd Release && ./ionkit_test
  #         echo "ion-kit test passed"
  
  #     - name: Test opencv for MSVC 2019
  #       if: matrix.os == 'windows-2019'
  #       run: |
  #         $BINPATH="${HOME}/sensing-dev/bin"
  #         $OPENCVBIN="${HOME}/sensing-dev/opencv/build/x64/vc15/bin"
  #         $env:PATH="$env:PATH;$BINPATH"
  #         $env:PATH="$env:PATH;$OPENCVBIN"
  #         $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
  #         cd installer/testcases/cpp/opencv_test  && cmake ./
  #         cmake --build . --config Release 
  #         cd Release && ./opencv_test

  #     - name: Install OpenCV separately on Windows MSVC 2022
  #       if: matrix.os == 'windows-2022'
  #       run: | 
  #         Remove-Item -LiteralPath "${HOME}/sensing-dev/opencv" -Force -Recurse
  #         $targetDir= "${HOME}/sensing-dev"
  #         Invoke-WebRequest -Uri https://github.com/opencv/opencv/releases/download/4.10.0/opencv-4.10.0-windows.exe -OutFile opencv-4.10.0-windows.exe 
  #         Start-Process -FilePath opencv-4.10.0-windows.exe -ArgumentList "-o`"$targetDir`" -y" -Wait

  #     - name: Test opencv for MSVC 2022
  #       if: matrix.os == 'windows-2022'
  #       run: |
  #         $BINPATH="${HOME}/sensing-dev/bin"
  #         $OPENCVBIN="${HOME}/sensing-dev/opencv/build/x64/vc16/bin"
  #         $env:PATH="$env:PATH;$BINPATH"
  #         $env:PATH="$env:PATH;$OPENCVBIN"
  #         $env:SENSING_DEV_ROOT="${HOME}/sensing-dev"
  #         cd installer/testcases/cpp/opencv_test  && cmake ./
  #         cmake --build . --config Release 
  #         cd Release && ./opencv_test
